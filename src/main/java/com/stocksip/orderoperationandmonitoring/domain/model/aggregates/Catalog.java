package com.stocksip.orderoperationandmonitoring.domain.model.aggregates;
import com.stocksip.orderoperationandmonitoring.domain.model.commands.CreateCatalogCommand;
import jakarta.persistence.Entity;
import jakarta.persistence.GenerationType;
import jakarta.persistence.*;
import lombok.Getter;

/**
 * @summary
 * Represents a catalog in the order operation and monitoring system.
 * This entity is used to manage and track items available for purchase.
 */

@Entity
@Getter
public class Catalog {
    /**
     * @type Long
     * Unique identifier for the catalog.
     * This is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * @type String
     * Name of the catalog.
     * This field is required and cannot be null.
     */
    @Column(nullable = false, length = 100)
    @Getter
    private String name;

    /**
     * @type boolean
     * State of the catalog.
     * This field is required and initialize in false.
     */
    @Column(nullable = false)
    private boolean isPublished = false;

    /**
     * @type String
     * Profile identifier of the catalog.
     * This field is required and cannot be null.
     */
    @Column(nullable = false, length = 50)
    @Getter
    private String profileId;

    /**
     * Default constructor for JPA.
     * It is protected to prevent instantiation from outside the package.
     */
    protected Catalog() {}


    public Catalog(CreateCatalogCommand command) {}


    /**
     * Updates the information of the catalog.
     * This method allows updating the catalog's name, profile ID, and publication state.
     * @param catalogId
     * @param name
     * @param profileId
     * @param isPublished
     * @return
     */

    public Catalog updateInformation(long catalogId, String name, String profileId, boolean isPublished) {
        this.id = catalogId;
        this.name = name;
        this.profileId = profileId;
        this.isPublished = isPublished;
        return this;
    }

}
